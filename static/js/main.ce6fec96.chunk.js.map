{"version":3,"sources":["static/bee.jpg","static/sunflower.jpg","static/dead-sunflower.jpg","static/no-bee.jpg","static/beach.jpg","static/house.jpg","static/document.png","static/no-document.png","static/circle.png","static/triangle.png","static/green.png","static/orange.png","views/ConsentView.tsx","views/FormView.tsx","Card.tsx","views/ExampleCardView.tsx","views/CommentsView.tsx","views/Phase1TextView.tsx","views/Phase2TextView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ConsentView","props","useState","checked","state","setState","className","type","value","id","onChange","event","target","htmlFor","onClick","onConsent","disabled","FormView","useFormContext","register","errors","setValue","watch","values","triggerValidation","isFilled","age","sex","isError","onContinue","ref","name","placeholder","min","max","handleChangeSex","Card","flip","glow","front","back","flipClasses","clsx","style","backgroundImage","visibility","ExampleCardView","images","example","disable","filter","it","length","map","index","key","handleOnClickCard","includes","indexOf","splice","push","shift","CommentsView","rows","Phase1TextView","Phase2TextView","DEFAULT_STATE","currentView","formResponses","App","form","useForm","ModelC","title","Component","continueToNextView","beachImage","houseImage","documentImage","noDocumentImage","ModelA","triangleImage","circleImage","greenImage","orangeImage","Views","sunflower","beeImage","deadSunflower","noBeeImage","isModelC","window","location","hash","replace","toUpperCase","calculatedViews","result","calculateViews","href","role","getValues","axios","get","method","params","Sexo","Edad","Condicion","Abstracto1","Abstracto2","Abstracto3","Abstracto4","Concreto1","Concreto2","Concreto3","Concreto4","ObservacionA","ObservacionC","then","r","console","log","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ce6fec96.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee.46bfdcfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunflower.fac94e71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dead-sunflower.4351cf6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-bee.9092e029.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beach.c2b60f36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/house.117fd659.jpg\";","module.exports = __webpack_public_path__ + \"static/media/document.51eaf01c.png\";","module.exports = __webpack_public_path__ + \"static/media/no-document.f24c056f.png\";","module.exports = __webpack_public_path__ + \"static/media/circle.89f06f86.png\";","module.exports = __webpack_public_path__ + \"static/media/triangle.3945b118.png\";","module.exports = __webpack_public_path__ + \"static/media/green.1bc74515.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.174e1878.png\";","import React, { useState } from 'react'\n\n\ninterface ConsentViewProps {\n  onConsent: () => void\n}\n\nfunction ConsentView(props: ConsentViewProps): React.ReactElement {\n\n  const [state, setState] = useState({ checked: false })\n\n  return (\n    <div className=\"row flex-grow-1 mb-5 mt-5 col-12 col-md-8 text-justify\">\n      <h5>\n        Todo ello según los artículos 39 al 49 del Código Deontológico del Psicólogo referido a la obtención y uso de la información, la Ley de Protección de Datos en la Investigación (41/2002, de 14 de noviembre), la Ley Orgánica 15/1999 de 13 de diciembre de Protección de Datos de Carácter Personal (BOE nº298 de 14 de diciembre) y el Reglamento General de Protección de Datos (RGPD).\n      </h5>\n\n\n      <div className=\"consent-check\">\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" checked={ state.checked } onChange={ handleOnChange }/>\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              Consiento\n            </label>\n        </div>\n      </div>\n      <div className=\"action-buttons-container\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={ props.onConsent } disabled={ !state.checked }>Siguiente</button>\n      </div>\n    </div>\n  );\n\n  function handleOnChange(event: React.ChangeEvent<{ checked: boolean }>) {\n    const value = event.target.checked\n    setState({ checked: value })\n  }\n}\n\nexport default ConsentView;\n","import React, { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { Simulate } from 'react-dom/test-utils'\n\n\ninterface FormViewProps {\n  onContinue: () => void\n}\n\nfunction FormView(props: FormViewProps): React.ReactElement {\n\n  const { register, errors, setValue, watch, triggerValidation } = useFormContext()\n\n\n  const values = watch([\"age\", \"sex\"])\n\n  const isFilled = !!values.age && !!values.sex\n  const isError =  errors['age'] || errors['sex']\n\n  const { onContinue } = props\n\n  return (\n    <div className=\"main-view flex-column\">\n        <div className=\"form-group row\">\n          <div className=\"input-group mb-2\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">Edad</div>\n            </div>\n            <input type=\"number\"\n                   ref={ register({\n                     // required: 'Requerido',\n                     // min: { value: 18, message: 'Should be greater than 18' },\n                     // validate: {\n                     //   number: (value: string) => /^-?\\d+$/.test(value) || 'Should be a number',\n                     //   positive: (value: string) => parseInt(value, 10) > 0 || 'Should be greater than 0',\n                     // },\n                   })}\n                   className=\"form-control\"\n                   id=\"age\"\n                   name=\"age\"\n                   placeholder=\"Introduce tu edad\"\n                   min={ 18 }\n                   max={ 120 }\n                   // onBlur={ () => triggerValidation('age') }\n                   onChange={ handleChangeAge }/>\n          </div>\n        </div>\n\n        <div className=\"form-group row\">\n          <div className=\"input-group mb-2\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">Sexo</div>\n            </div>\n            <div className=\"form-check form-check-inline ml-3\">\n              <input className=\"form-check-input\"\n                     ref={ register({}) }\n                     type=\"radio\"\n                     name=\"sex\"\n                     id=\"radioSexMale\"\n                     value=\"Hombre\"\n                     onChange={ handleChangeSex }/>\n              <label className=\"form-check-label\" htmlFor=\"radioSexMale\"> Hombre </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input className=\"form-check-input\"\n                     ref={ register({}) }\n                     type=\"radio\"\n                     name=\"sex\"\n                     id=\"radioSexFemale\"\n                     value=\"Mujer\"\n                     onChange={ handleChangeSex }/>\n              <label className=\"form-check-label\" htmlFor=\"radioSexFemale\"> Mujer </label>\n            </div>\n          </div>\n        </div>\n\n        <button className=\"btn btn-primary\" onClick={ onContinue } disabled={ !isFilled || isError }>Continuar</button>\n    </div>\n  )\n\n  function handleChangeAge(event: React.ChangeEvent<{ value: string }>): void {\n    const age = event.target.value\n    setValue(age)\n  }\n\n  function handleChangeSex(event: React.ChangeEvent<{ value: string }>): void {\n    const sex = event.target.value\n    setValue(sex)\n  }\n}\n\nexport default FormView;\n","import React from 'react'\nimport './App.css';\nimport clsx from 'clsx'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface CardProps {\n  flip?: boolean\n  glow?: boolean\n  id: string\n  onClick: (id: string) => void\n  front: string\n  back?: string\n}\n\nfunction Card(props: CardProps) {\n\n  const { flip = false, glow = false, onClick, id, front, back } = props\n\n  const { register, setValue } = useFormContext()\n\n  const flipClasses = clsx('flip', {\n    'glow': glow,\n    'hover': flip\n  })\n\n\n  return (\n    <div className=\"rootCard\">\n\n      <input className=\"form-check-input d-none\"\n             ref={ register({}) }\n             type=\"checkbox\"\n             value=\"\"\n             name={ `card-${ id }` }\n             onChange={ handleOnChange }\n             id={`card-${ id }`}/>\n\n\n      <label className={ flipClasses } onClick={ handleClick } htmlFor={`card-${ id }`}>\n          <div className=\"front\"\n               style={{ backgroundImage: `url(${ front })` }}>\n            <h5 className=\"hidden\" style={{ visibility: 'hidden' }}> FRONT </h5>\n          </div>\n        {\n          back &&\n          <div className=\"back\"\n               style={{ backgroundImage: `url(${ back })` }}>\n            <h5 className=\"hidden\" style={{ visibility: 'hidden' }}> BACK </h5>\n          </div>\n        }\n\n      </label>\n    </div>\n  );\n\n  function handleOnChange(event: React.ChangeEvent<{ value: string }>) {\n    const value = event.target.value\n    setValue(value)\n  }\n\n  function handleClick() {\n    onClick(id)\n  }\n}\n\nexport default Card;\n","import React, { useState } from 'react'\nimport Card from '../Card'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface ExampleCardProps {\n  onContinue: () => void\n  id: string\n  example?: boolean\n  images?: { front: string, back?: string }[]\n  flip?: boolean\n  glow?: boolean\n}\n\nfunction ExampleCardView(props: ExampleCardProps): React.ReactElement {\n  const { onContinue, id, images, flip, glow, example } = props\n  const { setValue } = useFormContext()\n\n  const [ state, setState ] = useState<{ flip: string[] }>({\n    flip: []\n  })\n\n  const disable = state.flip.filter(it => it).length !== 2 && !example\n\n  return (\n    <div className=\"row flex-grow-1 col-12 justify-content-center\">\n\n      <div className=\"row col-12 col-md-8 justify-content-center text-left\">\n        { example &&\n          <>\n            <p>El siguiente cometido tienes que realizarlo en solitario, en una zona de confort para ti pues tienes que prestar mucha atención  y leer con mucha cautela cada instrucción que te sale.</p>\n            <p className=\"w-100\">Lo primero que realizarás  será una actividad de prueba para familiarizarte con la tarea:</p>\n            <p>Supón que eres un apicultor. Tu misión es comprobar que todas las flores están siendo polinizadas, es decir, debes asegurarte de que la flor se encuentra en buen estado para ser polinizada por una abeja.</p>\n            <p>A continuación se te presentarán cuatro cartas, donde se muestra en una de sus caras a una flor sana o marchita, y en la otra cara la presencia de una abeja o no.</p>\n            <p>Por tanto, las cartas ejemplos muestra en una cara una flor en buen estado, y en la otra cara una abeja. Teniendo en cuenta, que estamos ante una simulación del experimento, selecciona las caras de las tarjetas las veces que necesites hasta que consideres estar preparado.</p>\n          </>\n        }\n      </div>\n\n      <div className=\"row d-flex col-12 justify-content-center mt-3 p-0\">\n        {\n          images && images.length > 0 &&\n            images.map(({ front, back }, index) => {\n\n              return (\n                <div className=\"d-flex col-6 col-md-3 col-lg-2\" key={ id }>\n                  <Card id={ `${ id }-${ index }` }\n                        onClick={ handleOnClickCard }\n                        flip={ flip && state.flip.includes(`${ id }-${ index }`) }\n                        front={ front }\n                        back={ back }\n                        glow={ glow && state.flip.includes(`${ id }-${ index }`) }\n\n                  />\n                </div>\n              )\n            })\n        }\n      </div>\n\n      <div className=\"mt-2 mb-2\">\n        <button className=\"btn btn-primary\" onClick={ onContinue } disabled={ disable }>Continuar</button>\n      </div>\n    </div>\n  )\n\n  function handleOnClickCard(id: string) {\n    if (state.flip.includes(id)) {\n      const index = state.flip.indexOf(id)\n\n      state.flip.splice(index, 1)\n\n    } else if (state.flip.length < 2){\n      state.flip.push(id)\n    } else if (state.flip.length >= 2) {\n      state.flip.shift()\n      state.flip.push(id)\n    }\n\n    setValue('cards.a', state.flip, false)\n    setState({ flip: state.flip })\n  }\n}\n\nexport default ExampleCardView;\n","import React  from 'react'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface FormViewProps {\n  id: string\n  onContinue: () => void\n}\n\nfunction CommentsView(props: FormViewProps): React.ReactElement {\n\n  const { onContinue, id } = props\n  const { register, setValue } = useFormContext()\n\n  return (\n    <div className=\"row align-items-start\">\n      <p>Te pedimos que nos expliques brevemente el porqué de tus elecciones.</p>\n\n      <div className=\"row flex-column justify-content-center w-100\">\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\">Observaciones</label>\n        <textarea className=\"form-control\"\n                  ref={ register({}) }\n                  id={`notes-${ id }`}\n                  name={`notes-${ id }`}\n                  rows={ 3 }\n                  onChange={ handleOnChange }/>\n      </div>\n\n        <div className=\"row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={ onContinue }>Continuar</button>\n        </div>\n    </div>\n    </div>\n  )\n\n  function handleOnChange(event: React.ChangeEvent<{ value: string }>) {\n    const value = event.target.value\n    setValue(value)\n  }\n}\n\nexport default CommentsView;\n","import React from 'react'\n\n\ninterface Phase2TextProps {\n  onContinue: () => void\n}\n\nfunction Phase1TextView(props: Phase2TextProps): React.ReactElement {\n  const { onContinue } = props\n\n  return (\n    <div className=\"row flex-grow-1 col-12 justify-content-center text-left\">\n\n      <div className=\"row col-12 col-md-8 justify-content-center\">\n        <p>El siguiente cometido tienes que realizarlo en solitario, en una zona de confort para ti pues tienes que prestar mucha atención y leer con mucha cautela cada instrucción que te sale.</p>\n        <p>Supón que tu grupo de amigos y tu quieren realizar una acampada en la isla de La Graciosa. Tu misión será conseguir un permiso del Cabildo que les permita acampar. Por tanto, si duermen en una tienda de campaña en una parcela de La Graciosa es porque han conseguido la autorización del Cabildo.</p>\n        <p>Se te presentarán cuatro tarjetas donde te aparecerán en una cara la imagen de una tienda de campaña o un apartamento, y en la otra cara personas que tienen o no el permiso.</p>\n        <p>Para realizar la tarea tienes que tener en cuenta que solo hay dos tarjetas que necesitas girar para verificar si tu grupo de amigos y tú están siguiendo la normativa, selecciona las que tu consideres.</p>\n      </div>\n\n      <div className=\"row d-flex col-12 justify-content-center mt-3\">\n\n      </div>\n\n      <div className=\"mt-2 mb-2\">\n        <button className=\"btn btn-primary\" onClick={ onContinue }>Continuar</button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Phase1TextView;\n","import React from 'react'\n\n\ninterface Phase1TextProps {\n  onContinue: () => void\n}\n\nfunction Phase2TextView(props: Phase1TextProps): React.ReactElement {\n  const { onContinue } = props\n\n  return (\n    <div className=\"row flex-grow-1 col-12 justify-content-center\">\n\n      <div className=\"row col-12 col-md-8 justify-content-center text-justify\">\n        <p>El siguiente cometido tienes que realizarlo en solitario, en una zona de confort para ti pues tienes que prestar mucha atención y leer con mucha cautela cada instrucción que te sale.</p>\n        <p>Se te presentarán cuatro tarjetas donde en una cara hay una figura geométrica y en su reverso un color. Tu misión será comprobar que detrás de cada figura triangular se encuentra el color verde.</p>\n        <p>Para realizar la tarea tienes que tener en cuenta que solo hay dos tarjetas que necesitas girar para verificar la regla (“si en una cara observas un triángulo, detrás debe haber el color verde”), selecciona las que tu consideres.</p>\n      </div>\n\n      <div className=\"row d-flex col-12 justify-content-center mt-3\">\n\n      </div>\n\n      <div className=\"mt-2 mb-2\">\n        <button className=\"btn btn-primary\" onClick={ onContinue }>Continuar</button>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Phase2TextView;\n","import React, { useState } from 'react'\nimport './App.css';\nimport ConsentView from './views/ConsentView'\nimport { FormContext, useForm } from 'react-hook-form'\nimport FormView from './views/FormView'\nimport ExampleCardView from './views/ExampleCardView'\nimport CommentsView from './views/CommentsView'\n\nimport axios from 'axios';\n\nimport beeImage from './static/bee.jpg'\nimport sunflower from './static/sunflower.jpg'\nimport deadSunflower from './static/dead-sunflower.jpg'\nimport noBeeImage from './static/no-bee.jpg'\nimport beachImage from './static/beach.jpg'\nimport houseImage from './static/house.jpg'\nimport documentImage from './static/document.png'\nimport noDocumentImage from './static/no-document.png'\n\nimport circleImage from './static/circle.png'\nimport triangleImage from './static/triangle.png'\nimport greenImage from './static/green.png'\nimport orangeImage from './static/orange.png'\nimport Phase1TextView from './views/Phase1TextView'\nimport Phase2TextView from './views/Phase2TextView'\n\nconst DEFAULT_STATE = {\n  currentView: 0,\n  formResponses: {}\n}\nconst googleFormUrl = 'https://script.google.com/macros/s/AKfycbx6RnkKB90FdKDOuOUqUdU711ceK5sNXqyuYaS5_wiy3bTK6cI/exec'\nfunction App() {\n\n  const form = useForm()\n\n  const ModelC = [\n    {\n      title: '',\n      Component: <Phase1TextView onContinue={ continueToNextView }/>\n    },\n    {\n      title: '\"Si una persona quiere acampar en la isla de la graciosa, debe tener el permiso con la reserva de la parcela.\"',\n      Component: <ExampleCardView onContinue={ continueToNextView } id={ 'c' } glow images={[\n        { front: beachImage },\n        { front: houseImage },\n        { front: documentImage },\n        { front: noDocumentImage },\n\n      ]}/>,\n    },\n    {\n      title: '',\n      Component: <CommentsView onContinue={ continueToNextView } id={ 'c' }/>,\n    },\n  ]\n\n  const ModelA = [\n    {\n      title: '',\n      Component: <Phase2TextView onContinue={ continueToNextView }/>\n    },\n    {\n      title: '\"Si en una cara observas un triángulo, detrás debe haber el color verde\"',\n      Component: <ExampleCardView onContinue={ continueToNextView } id={ 'a' } glow images={[\n        { front: triangleImage },\n        { front: circleImage },\n        { front: greenImage },\n        { front: orangeImage },\n      ]}/>,\n    },\n    {\n      title: '',\n      Component: <CommentsView onContinue={ continueToNextView } id={ 'a' }/>,\n    },\n  ]\n\n  const Views = [\n    {\n      title: 'Reglamento General de Protección de Datos',\n      Component: <ConsentView onConsent={ continueToNextView }/>,\n    },\n    {\n      title: '',\n      Component: <FormView onContinue={ continueToNextView }/>,\n    },\n    {\n      title: 'SIMULACIÓN DE LA TAREA',\n      Component: <ExampleCardView onContinue={ continueToNextView } id='example' example flip images={[\n        { front: sunflower, back: beeImage },\n        { front: deadSunflower, back: noBeeImage },\n        { front: beeImage, back: sunflower },\n        { front: noBeeImage, back: deadSunflower }\n      ]}/>,\n    },\n    {\n      title: 'Empezamos el experimento',\n      Component: <div className=\"d-flex flex-column justify-content-center\"> <button className=\"btn btn-primary\" onClick={ continueToNextView }>Empezar experimento </button> </div>\n    },\n\n  ]\n\n  const [ state, setState ] = useState(DEFAULT_STATE)\n  const isModelC = window.location.hash.replace('#', '').toUpperCase() === 'C'\n\n  const calculatedViews = calculateViews()\n\n  const Component = calculatedViews[ state.currentView ]?.Component\n\n\n  if (!Component) {\n    return null\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"w-100 navbar navbar-expand-md navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"#\">Experimento de las 4 tarjetas</a>\n        </nav>\n      </header>\n\n      <main role=\"main\" className=\"d-flex flex-shrink-0\">\n        <div className=\"container-fluid justify-content-center\">\n          <div className=\"row col-12 justify-content-center flex-column\">\n            <h2 className=\"mb-5 mt-5 justify-content-center\">{ calculatedViews[ state.currentView ].title}</h2>\n            <FormContext { ...form }>\n              <form className=\"d-flex flex-wrap justify-content-center flex-grow-1\">\n                { Component }\n              </form>\n            </FormContext>\n          </div>\n        </div>\n      </main>\n\n    </div>\n  );\n\n  function continueToNextView() {\n    const currentView = state.currentView +1\n    const formResponses: any = { ...state.formResponses, ...form.getValues() }\n    setState({ currentView, formResponses })\n\n\n    if (currentView === calculatedViews.length - 1) {\n      axios.get(googleFormUrl, {\n        method: 'GET',\n        params: {\n          Sexo: formResponses.sex,\n          Edad: formResponses.age,\n          Condicion: isModelC ? 'C-A' : 'A-C',\n          Abstracto1: formResponses['card-a-0'],\n          Abstracto2: formResponses['card-a-1'],\n          Abstracto3: formResponses['card-a-2'],\n          Abstracto4: formResponses['card-a-3'],\n          Concreto1: formResponses['card-c-0'],\n          Concreto2: formResponses['card-c-1'],\n          Concreto3: formResponses['card-c-2'],\n          Concreto4: formResponses['card-c-3'],\n          ObservacionA: formResponses['notes-a'],\n          ObservacionC: formResponses['notes-c'],\n    }\n      }).then(r => console.log(r))\n    }\n  }\n\n  function calculateViews() {\n    let result = []\n\n    if (isModelC) {\n      result = [...Views, ...ModelC, ...ModelA]\n    } else {\n      result = [...Views, ...ModelA, ...ModelC]\n    }\n\n    result.push({ title: 'Fin del experimento', Component: <h1> Gracias por tu colaboración.</h1> })\n\n    return result\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n//comment\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}