{"version":3,"sources":["static/bee.jpg","static/sunflower.jpg","static/dead-sunflower.jpg","static/no-bee.jpg","static/beach.jpg","static/house.jpg","static/document.png","static/no-document.png","static/circle.png","static/triangle.png","static/green.png","static/orange.png","views/ConsentView.tsx","views/FormView.tsx","Card.tsx","views/ExampleCardView.tsx","views/CommentsView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ConsentView","props","useState","checked","state","setState","className","type","value","id","onChange","event","target","htmlFor","onClick","onConsent","disabled","FormView","useFormContext","register","errors","setValue","watch","triggerValidation","values","isFilled","age","sex","isError","onContinue","ref","required","min","message","validate","number","test","positive","parseInt","name","placeholder","max","onBlur","handleChangeSex","Card","flip","glow","front","back","flipClasses","clsx","style","backgroundImage","visibility","ExampleCardView","images","length","map","index","key","handleOnClickCard","includes","indexOf","splice","push","shift","CommentsView","rows","DEFAULT_STATE","currentView","formResponses","App","form","useForm","Views","title","Component","continueToNextView","sunflower","beeImage","deadSunflower","noBeeImage","beachImage","houseImage","documentImage","noDocumentImage","triangleImage","circleImage","greenImage","orangeImage","console","log","href","role","getValues","axios","get","method","params","model","then","r","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ba9fcb2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bee.46bfdcfa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunflower.fac94e71.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dead-sunflower.4351cf6d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/no-bee.9092e029.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beach.c2b60f36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/house.117fd659.jpg\";","module.exports = __webpack_public_path__ + \"static/media/document.51eaf01c.png\";","module.exports = __webpack_public_path__ + \"static/media/no-document.f24c056f.png\";","module.exports = __webpack_public_path__ + \"static/media/circle.89f06f86.png\";","module.exports = __webpack_public_path__ + \"static/media/triangle.3945b118.png\";","module.exports = __webpack_public_path__ + \"static/media/green.1bc74515.png\";","module.exports = __webpack_public_path__ + \"static/media/orange.174e1878.png\";","import React, { useState } from 'react'\n\n\ninterface ConsentViewProps {\n  onConsent: () => void\n}\n\nfunction ConsentView(props: ConsentViewProps): React.ReactElement {\n\n  const [state, setState] = useState({ checked: false })\n\n  return (\n    <div className=\"row flex-grow-1 mb-5 mt-5 col-8\">\n      <h4>\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      </h4>\n\n\n      <div className=\"consent-check\">\n        <div className=\"form-check\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" checked={ state.checked } onChange={ handleOnChange }/>\n            <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n              I consent to do this bro.\n            </label>\n        </div>\n      </div>\n      <div className=\"action-buttons-container\">\n        <button type=\"button\" className=\"btn btn-primary\" onClick={ props.onConsent } disabled={ !state.checked }>Siguiente</button>\n      </div>\n    </div>\n  );\n\n  function handleOnChange(event: React.ChangeEvent<{ checked: boolean }>) {\n    const value = event.target.checked\n    setState({ checked: value })\n  }\n}\n\nexport default ConsentView;\n","import React, { useState } from 'react'\nimport { useFormContext } from 'react-hook-form'\nimport { Simulate } from 'react-dom/test-utils'\n\n\ninterface FormViewProps {\n  onContinue: () => void\n}\n\nfunction FormView(props: FormViewProps): React.ReactElement {\n\n  const { register, errors, setValue, watch, triggerValidation } = useFormContext()\n\n\n  const values = watch([\"age\", \"sex\"])\n\n  const isFilled = !!values.age && !!values.sex\n  const isError =  errors['age'] || errors['sex']\n\n  const { onContinue } = props\n\n  return (\n    <div className=\"main-view flex-column\">\n        <div className=\"form-group row\">\n          <div className=\"input-group mb-2\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">Edad</div>\n            </div>\n            <input type=\"number\"\n                   ref={ register({\n                     required: 'Requerido',\n                     min: { value: 18, message: 'Should be greater than 18' },\n                     validate: {\n                       number: (value: string) => /^-?\\d+$/.test(value) || 'Should be a number',\n                       positive: (value: string) => parseInt(value, 10) > 0 || 'Should be greater than 0',\n                     },\n                   })}\n                   className=\"form-control\"\n                   id=\"age\"\n                   name=\"age\"\n                   placeholder=\"Type your age\"\n                   min={ 18 }\n                   max={ 120 }\n                   onBlur={ () => triggerValidation('age') }\n                   onChange={ handleChangeAge }/>\n          </div>\n        </div>\n\n        <div className=\"form-group row\">\n          <div className=\"input-group mb-2\">\n            <div className=\"input-group-prepend\">\n              <div className=\"input-group-text\">Sexo</div>\n            </div>\n            <div className=\"form-check form-check-inline ml-3\">\n              <input className=\"form-check-input\"\n                     ref={ register({}) }\n                     type=\"radio\"\n                     name=\"sex\"\n                     id=\"radioSexMale\"\n                     value=\"Hombre\"\n                     onChange={ handleChangeSex }/>\n              <label className=\"form-check-label\" htmlFor=\"radioSexMale\"> Hombre </label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input className=\"form-check-input\"\n                     ref={ register({}) }\n                     type=\"radio\"\n                     name=\"sex\"\n                     id=\"radioSexFemale\"\n                     value=\"Mujer\"\n                     onChange={ handleChangeSex }/>\n              <label className=\"form-check-label\" htmlFor=\"radioSexFemale\"> Mujer </label>\n            </div>\n          </div>\n        </div>\n\n        <button className=\"btn btn-primary\" onClick={ onContinue } disabled={ !isFilled || isError }>Continuar</button>\n    </div>\n  )\n\n  function handleChangeAge(event: React.ChangeEvent<{ value: string }>): void {\n    const age = event.target.value\n    setValue(age)\n  }\n\n  function handleChangeSex(event: React.ChangeEvent<{ value: string }>): void {\n    const sex = event.target.value\n    setValue(sex)\n  }\n}\n\nexport default FormView;\n","import React from 'react'\nimport './App.css';\nimport clsx from 'clsx'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface CardProps {\n  flip?: boolean\n  glow?: boolean\n  id: string\n  onClick: (id: string) => void\n  front: string\n  back?: string\n}\n\nfunction Card(props: CardProps) {\n\n  const { flip = false, glow = false, onClick, id, front, back } = props\n\n  const { register, setValue } = useFormContext()\n\n  const flipClasses = clsx('flip', {\n    'glow': glow,\n    'hover': flip\n  })\n\n\n  return (\n    <div className=\"rootCard\">\n\n      <input className=\"form-check-input d-none\"\n             ref={ register({}) }\n             type=\"checkbox\"\n             value=\"\"\n             name={ `card-${ id }` }\n             onChange={ handleOnChange }\n             id={`card-${ id }`}/>`\n\n\n      <label className={ flipClasses } onClick={ handleClick } htmlFor={`card-${ id }`}>\n          <div className=\"front\"\n               style={{ backgroundImage: `url(${ front })` }}>\n            <h5 className=\"hidden\" style={{ visibility: 'hidden' }}> FRONT </h5>\n          </div>\n        {\n          back &&\n          <div className=\"back\"\n               style={{ backgroundImage: `url(${ back })` }}>\n            <h5 className=\"hidden\" style={{ visibility: 'hidden' }}> BACK </h5>\n          </div>\n        }\n\n      </label>\n    </div>\n  );\n\n  function handleOnChange(event: React.ChangeEvent<{ value: string }>) {\n    const value = event.target.value\n    setValue(value)\n  }\n\n  function handleClick() {\n    onClick(id)\n  }\n}\n\nexport default Card;\n","import React, { useState } from 'react'\nimport Card from '../Card'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface ExampleCardProps {\n  onContinue: () => void\n  id: string\n  images?: { front: string, back?: string }[]\n  flip?: boolean\n  glow?: boolean\n}\n\nfunction ExampleCardView(props: ExampleCardProps): React.ReactElement {\n  const { onContinue, id, images, flip, glow } = props\n  const { setValue } = useFormContext()\n\n  const [ state, setState ] = useState<{ flip: string[] }>({\n    flip: []\n  })\n\n  return (\n    <div className=\"row flex-grow-1 col-12 justify-content-center\">\n\n      <div className=\"row col-8 justify-content-center\">\n        <p>Lo primero que realizarás  será una actividad de prueba para familiarizarte con la tarea:</p>\n        <p>Supón que eres un apicultor. Tu misión es comprobar que todas las flores están siendo polinizadas, es decir, debes asegurarte de que la flor se encuentra en buen estado para ser polinizada por una abeja.</p>\n        <p>A continuación se te presentarán cuatro cartas donde se muestra en una de sus caras a una flor sana o marchita, y en la otra cara la presencia de una abeja o no. Por tanto, la cara ejemplo muestra en una cara de la tarjeta una flor en buen estado y en la otra cara una abeja. Indica solamente las caras de las tarjeta o tarjetas que estés seguro que necesitas girar para ver si la abeja está polinizando o no.</p>\n      </div>\n\n      <div className=\"row d-flex col-12 justify-content-center mt-3\">\n        {\n          images && images.length > 0 &&\n            images.map(({ front, back }, index) => {\n\n              return (\n                <div className=\"d-flex col-6 col-md-3 col-lg-2\" key={ id }>\n                  <Card id={ `${ id }-${ index }` }\n                        onClick={ handleOnClickCard }\n                        flip={ flip && state.flip.includes(`${ id }-${ index }`) }\n                        front={ front }\n                        back={ back }\n                        glow={ glow && state.flip.includes(`${ id }-${ index }`) }\n\n                  />\n                </div>\n              )\n            })\n        }\n      </div>\n\n      <div className=\"mt-2 mb-2\">\n        <button className=\"btn btn-primary\" onClick={ onContinue }>Continuar</button>\n      </div>\n    </div>\n  )\n\n  function handleOnClickCard(id: string) {\n    if (state.flip.includes(id)) {\n      const index = state.flip.indexOf(id)\n\n      state.flip.splice(index, 1)\n\n    } else if (state.flip.length < 2){\n      state.flip.push(id)\n    } else if (state.flip.length >= 2) {\n      state.flip.shift()\n      state.flip.push(id)\n    }\n\n    setValue('cards.a', state.flip, false)\n    setState({ flip: state.flip })\n  }\n}\n\nexport default ExampleCardView;\n","import React  from 'react'\nimport { useFormContext } from 'react-hook-form'\n\n\ninterface FormViewProps {\n  id: string\n  onContinue: () => void\n}\n\nfunction CommentsView(props: FormViewProps): React.ReactElement {\n\n  const { onContinue, id } = props\n  const { register, setValue } = useFormContext()\n\n  return (\n    <div className=\"row align-items-start\">\n      <p>Lo primero que realizarás  será una actividad de prueba para familiarizarte con la tarea:</p>\n\n      <div className=\"row flex-column justify-content-center w-100\">\n      <div className=\"form-group row\">\n        <label htmlFor=\"exampleFormControlTextarea1\">Notas</label>\n        <textarea className=\"form-control\"\n                  ref={ register({}) }\n                  id={`notes-${ id }`}\n                  name={`notes-${ id }`}\n                  rows={ 3 }\n                  onChange={ handleOnChange }/>\n      </div>\n\n        <div className=\"row justify-content-center\">\n          <button className=\"btn btn-primary\" onClick={ onContinue }>Continuar</button>\n        </div>\n    </div>\n    </div>\n  )\n\n  function handleOnChange(event: React.ChangeEvent<{ value: string }>) {\n    const value = event.target.value\n    setValue(value)\n  }\n}\n\nexport default CommentsView;\n","import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport ConsentView from './views/ConsentView'\nimport { FormContext, useForm } from 'react-hook-form'\nimport FormView from './views/FormView'\nimport ExampleCardView from './views/ExampleCardView'\nimport CommentsView from './views/CommentsView'\n\n\nimport axios from 'axios';\n\nimport beeImage from './static/bee.jpg'\nimport sunflower from './static/sunflower.jpg'\nimport deadSunflower from './static/dead-sunflower.jpg'\nimport noBeeImage from './static/no-bee.jpg'\nimport beachImage from './static/beach.jpg'\nimport houseImage from './static/house.jpg'\nimport documentImage from './static/document.png'\nimport noDocumentImage from './static/no-document.png'\n\nimport circleImage from './static/circle.png'\nimport triangleImage from './static/triangle.png'\nimport greenImage from './static/green.png'\nimport orangeImage from './static/orange.png'\n\nconst DEFAULT_STATE = {\n  currentView: 0,\n  formResponses: {}\n}\nconst googleFormUrl = 'https://script.google.com/macros/s/AKfycbygMAFXavg0ZQ5RzR-y92xuaY3QOiCFUPtywkL0OqvCalxfbYU/exec'\nfunction App() {\n\n  const form = useForm()\n\n  const Views = [\n    {\n      title: 'Consent',\n      Component: <ConsentView onConsent={ continueToNextView }/>,\n    },\n    {\n      title: 'Basic Information',\n      Component: <FormView onContinue={ continueToNextView }/>,\n    },\n    {\n      title: 'El siguiente cometido tienes que realizarlo en solitario, en una zona de confort para ti pues tienes que prestar mucha atención.',\n      Component: <ExampleCardView onContinue={ continueToNextView } id='example' flip images={[\n        { front: sunflower, back: beeImage },\n        { front: deadSunflower, back: noBeeImage },\n        { front: beeImage, back: sunflower },\n        { front: noBeeImage, back: deadSunflower }\n      ]}/>,\n    },\n    {\n      title: 'Empezar experimento',\n      Component: <div className=\"d-flex flex-column justify-content-center\"> <button className=\"btn btn-primary\" onClick={ continueToNextView }>Empezar experimento </button> </div>\n    },\n    {\n      title: 'El siguiente 23 cometido es la prueba primera.',\n      Component: <ExampleCardView onContinue={ continueToNextView } id={ 'a' } glow images={[\n        { front: beachImage },\n        { front: houseImage },\n        { front: documentImage },\n        { front: noDocumentImage },\n      ]}/>,\n    },\n    {\n      title: 'Notas',\n      Component: <CommentsView onContinue={ continueToNextView } id={ 'a' }/>,\n    },\n    {\n      title: 'El siguiente cometido es la prueba segunda.',\n      Component: <ExampleCardView onContinue={ continueToNextView } id={ 'c' } glow images={[\n        { front: triangleImage },\n        { front: circleImage },\n        { front: greenImage },\n        { front: orangeImage },\n      ]}/>,\n    },\n    {\n      title: 'Notas',\n      Component: <CommentsView onContinue={ continueToNextView } id={ 'c' }/>,\n    },\n    {\n      title: 'Fin del experimento',\n      Component: <h1> Gracias por participar </h1>,\n    }\n  ]\n\n  const [ state, setState ] = useState(DEFAULT_STATE)\n\n  console.log(state.formResponses)\n  const Component = Views[ state.currentView ].Component\n\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"w-100 navbar navbar-expand-md navbar-dark bg-dark\">\n          <a className=\"navbar-brand\" href=\"#\">Experimento numero 32</a>\n        </nav>\n      </header>\n\n      <main role=\"main\" className=\"d-flex flex-shrink-0\">\n        <div className=\"container-fluid justify-content-center\">\n          <div className=\"row col-12 justify-content-center flex-column\">\n            <h2 className=\"mb-5 mt-5 justify-content-center\">{ Views[ state.currentView ].title}</h2>\n            <FormContext { ...form }>\n              <form className=\"d-flex flex-wrap justify-content-center flex-grow-1\">\n                { Component }\n              </form>\n            </FormContext>\n          </div>\n        </div>\n      </main>\n\n    </div>\n  );\n\n  function continueToNextView() {\n    const currentView = state.currentView +1\n    const formResponses: any = { ...state.formResponses, ...form.getValues() }\n    setState({ currentView, formResponses })\n\n\n    if (currentView === Views.length - 1) {\n      axios.get(googleFormUrl, {\n        method: 'GET',\n        params: {\n          sex: formResponses.sex,\n          age: formResponses.age,\n          model: 'A-C',\n          'card-a-1': formResponses['card-a-0'],\n          'card-a-2': formResponses['card-a-1'],\n          'card-a-3': formResponses['card-a-2'],\n          'card-a-4': formResponses['card-a-3'],\n          'card-c-1': formResponses['card-c-0'],\n          'card-c-2': formResponses['card-c-1'],\n          'card-c-3': formResponses['card-c-2'],\n          'card-c-4': formResponses['card-c-3'],\n          'notes-a': formResponses['notes-a'],\n          'notes-c': formResponses['notes-c'],\n    }\n      }).then(r => console.log(r))\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n//comment\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}